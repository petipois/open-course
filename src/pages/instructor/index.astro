---
import DefaultLayout from "@/layouts/DefaultLayout.astro";
import { Input } from "@/components/starwind/input";
import { Button } from "@/components/starwind/button";
import { instructorCheck, courseExists } from "@/lib/helper";
const user = await Astro.locals.currentUser();
if (!user) {
  throw Astro.redirect("/login");
} else {
  //CHECK IF THE EMAIL ADDRESS IS THE ONE FOR CREATING THE COURSE
  const email = user.emailAddresses[0].emailAddress;
  const isInstructor = await instructorCheck(email);
  const course = await courseExists(); //CHECK IF THERE IS A COURSE IN THE DB
  if (!isInstructor) {
    throw Astro.redirect("/course"); //REDIRECTS TO PUBLIC COURSE PAGE
  }

  //If the email is the instructor email and a course exists in the database go t, o step 2 - lessons
  if (isInstructor && course) {
    return Astro.redirect("/instructor/lessons");
  }
}
---

<DefaultLayout>
  <div class="min-h-screen bg-gray-50 py-12">
    <div class="max-w-3xl mx-auto bg-white rounded-2xl shadow-lg p-8">
      
      <h1 class="text-3xl font-bold text-gray-900 mb-6">
        Instructor Dashboard
      </h1>

      <!-- Step Navigation -->
      <div class="flex justify-between mb-8">
        <div
          class="flex items-center space-x-2 text-blue-600 font-medium border-b-2 border-blue-600 pb-1"
        >
          <span>1</span>
          <span>Create Course</span>
        </div>
      </div>

      <!-- Step 1: Create Course -->
      <form class="space-y-6" method="POST" action="/api/create-course">
        <div>
          <label class="block text-gray-700 font-semibold mb-1"
            >Course Title</label
          >
          <Input
            name="course_title"
            placeholder="e.g. Introduction to Astro"
            required
          />
        </div>

        <div>
          <label class="block text-gray-700 font-semibold mb-1"
            >Course Description</label
          >
          <textarea
            name="course_description"
            rows="4"
            class="w-full rounded-lg border-gray-300 focus:ring-2 focus:ring-blue-500 p-2"
            placeholder="Write a short description..."
            required></textarea>
        </div>
        <div>
          <label class="block text-gray-700 font-semibold mb-1"
            >Course Price</label
          >
          <Input name="course_price" placeholder="e.g. 999 (9.99)" required />
        </div>
         <div>
          <label class="block text-gray-700 font-semibold mb-1"
            >Thumbnail Image</label
          >
          <Input type="file" id="image" name="thumbnail" accept="image/*" />
        </div>
        <input type="hidden" value={user.id} name="creator_id" />
        <div class="flex justify-end">
          <Button type="submit" variant="primary"> Next: Add Lessons â†’ </Button>
        </div>
      </form>
    </div>
  </div>
</DefaultLayout>
<script is:inline>
  const imageInput = document.getElementById("image");
  const form = document.querySelector("form");

  imageInput.addEventListener("change", async (event) => {
    const file = event.target.files[0];
    if (!file) return;

    const formData = new FormData();
    formData.append("file", file);

    const res = await fetch("/api/upload", {
      method: "POST",
      body: formData,
    });

    const data = await res.json();
    if (data.url) {
      // Create a hidden field with the URL for the form submission
      let hidden = document.createElement("input");
      hidden.type = "hidden";
      hidden.name = "thumbnail_url";
      hidden.value = data.url;
      form.appendChild(hidden);
    }
  });
</script>
